{"version":3,"sources":["chips/chips-demo.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAwB,eAAe,CAAC,CAAA;AAkBxC;IAAA;QACE,YAAO,GAAY,IAAI,CAAC;QACxB,UAAK,GAAW,EAAE,CAAC;QAEnB,WAAM,GAAa;YACjB,EAAE,IAAI,EAAE,MAAM,EAAE;YAChB,EAAE,IAAI,EAAE,QAAQ,EAAE;YAClB,EAAE,IAAI,EAAE,QAAQ,EAAE;YAClB,EAAE,IAAI,EAAE,MAAM,EAAE;YAChB,EAAE,IAAI,EAAE,WAAW,EAAE;YACrB,EAAE,IAAI,EAAE,MAAM,EAAE;SACjB,CAAC;QAEF,oBAAe,GAAgB;YAC7B,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE;YAC3B,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;YACrC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;YACnC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;SAChC,CAAC;IAgBJ,CAAC;IAdC,yBAAK,GAAL,UAAM,OAAe;QACnB,KAAK,CAAC,OAAO,CAAC,CAAC;IACjB,CAAC;IAED,uBAAG,GAAH,UAAI,KAAc;QAChB,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC/C,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QACnB,CAAC;IACH,CAAC;IAED,iCAAa,GAAb;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAvCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAE,iBAAiB;YAC9B,SAAS,EAAE,CAAC,gBAAgB,CAAC;SAC9B,CAAC;;iBAAA;IAmCF,gBAAC;AAAD,CAlCA,AAkCC,IAAA;AAlCY,iBAAS,YAkCrB,CAAA","file":"chips-demo.js","sourcesContent":["import {Component} from '@angular/core';\nimport {MdInput} from '@angular/material';\n\nexport interface Person {\n  name: string;\n}\n\nexport interface DemoColor {\n  name: string;\n  color: string;\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'chips-demo',\n  templateUrl: 'chips-demo.html',\n  styleUrls: ['chips-demo.css']\n})\nexport class ChipsDemo {\n  visible: boolean = true;\n  color: string = '';\n\n  people: Person[] = [\n    { name: 'Kara' },\n    { name: 'Jeremy' },\n    { name: 'Topher' },\n    { name: 'Elad' },\n    { name: 'Kristiyan' },\n    { name: 'Paul' }\n  ];\n\n  availableColors: DemoColor[] = [\n    { name: 'none', color: '' },\n    { name: 'Primary', color: 'primary' },\n    { name: 'Accent', color: 'accent' },\n    { name: 'Warn', color: 'warn' }\n  ];\n\n  alert(message: string): void {\n    alert(message);\n  }\n\n  add(input: MdInput): void {\n    if (input.value && input.value.trim() != '') {\n      this.people.push({ name: input.value.trim() });\n      input.value = '';\n    }\n  }\n\n  toggleVisible(): void {\n    this.visible = false;\n  }\n}\n"]}