// Import all the tools needed to customize the theme and extract parts of it
// @import '~@angular/material/core/theming/all-theme';
@import '../../all-theme';

// Define a mixin that accepts a theme and outputs the color styles for the component.
@mixin ap-list-theme($theme) {
  // Extract whichever individual palettes you need from the theme.
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);

  $item-title-color: #2A2F34;
  $item-text-color: #9B9B9B;

  md-nav-list[ap-list] {
    padding-top: 0;
    border-right: 1px solid md-color($md-ap-light-grey, 500);

    &[active]
    [md-list-item] { opacity: 0.6; }
    [md-list-item] {
      position: relative;
      opacity: 1;
      box-shadow: 0 0 0 0 rgba(0,0,0,.1);
      transition: all .2s ease-in-out;

      &:hover { text-decoration: none; }

      .md-list-item {
        height: $item-height;
        /*border-bottom: 1px solid md-color($md-ap-light-grey, 500);*/
        border-bottom: 1px solid $color-border;
        font-family: "Open Sans";

        .md-list-text {
          padding-right: 0;
          .title {
            display: flex;
            .name {
              flex: 1;
              font-size: 14px;
              color: $item-title-color;
            }
            .status {
              display: flex;
              align-items: center;
              font-size: 12px;
              color: #9A9A9A;
              [ap-social-icon] { opacity: 0.5; }
              > * { margin-left: 10px; }
              i { font-size: 13px; }
              i, div { width: 12px; height: 12px; }
            }
          }
          .text {
            font-size: 13px;
            color: $item-text-color;
          }
        }

      }
      &.selected,
      &[selected] {
        opacity: 1;
        // TODO this was my first try to make the overflow shadow work.
        // It can be possibly be done if we sync the item-list width with the
        // :before width. But I didnt want to put the responsive query's in this package
        box-shadow: 0 0 16px 0 rgba(0,0,0,.19);
      }
    }

  }

}
